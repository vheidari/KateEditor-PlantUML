<?xml version="1.0" encoding="UTF-8"?>
<language name="PlantUml" version="1" kateversion="2.4" section="Sources" extensions="*.pu;*.uml;*.puml;*.iuml;*.plantuml" author="Vahid Heidari (vahid-heidari@hotmail.com)" license="MIT">
    <highlighting>
        <!-- OpenCloseToken Keywords -->
        <list name="OpenCloseKeywords">
            <item>@startuml</item>
            <item>@startmindmap</item>
            <item>@enduml</item>
            <item>@endmindmap</item>
        </list>

        <!-- Define List of keywords  -->
        <list name="Keywords">
            <item>abstract</item>
            <item>interface</item>
            <item>class</item>
            <item>struct</item>
            <item>object</item>
            <item>extend</item>
            <item>implement</item>
            <item>annotation</item>
            <item>circle</item>
            <item>diamond</item>
            <item>enum</item>
            <item>exception</item>
            <item>metaclass</item>
            <item>protocol</item>
            <item>stereotype</item>
            <item>skinparam</item>
            <item>skinparam</item>
            <item>classAttributeIconSize</item>
        </list>
        
        <!-- Define List of participants keyword  -->
        <list name="Participants">
            <item>participant</item>
            <item>actor</item>
            <item>boundary</item>
            <item>control</item>
            <item>entity</item>
            <item>database</item>
            <item>collections</item>
            <item>queue</item>
            <item>as</item>
            <item>remove</item>
            <item>hide</item>
        </list>
        
        <!-- Define List of Modifires  -->
        <list name="Modifires">
            <item>public</item>
            <item>private</item>
            <item>protected</item>
            <item>static</item>
            <item>virtual</item>
        </list>
        
        <!-- Define List of Typse  -->
        <list name="Types">
            <item>Int</item>
            <item>Float</item>
            <item>Double</item>
            <item>String</item>
            <item>Void</item>
            <item>int</item>
            <item>float</item>
            <item>double</item>
            <item>string</item>
            <item>void</item>
        </list>
        
        <!-- Define list of Noations -->
        <list name="Noations">
            <item>override</item>
        </list>
        
        <!-- Define List of Conditions  -->
        <list name="Conditions">
            <item>if</item>
            <item>else</item>
            <item>switch</item>
        </list>
        
        
        

        <!-- Start Contexts    -->
        <contexts>
            <!--  Normal Text context -->
            <context attribute="NormalText" lineEndContext="#pop" name="NormalText">
                <DetectSpaces />
                 <!-- Start Handeling Multiple line Comment [(related by) -> context name="Comment"]  -->
                <StringDetect attribute="Comment" context="Comment" String="/'" beginRegion="comment"/>
                
                <!--  Start Handeling OpenCloseKeywords -->
                <keyword attribute="OpenCloseKeyword" context="#stay" String="OpenCloseKeywords" />
                
                <!-- Start Handeling Types -->
                <keyword attribute="Type" context="#stay" String="Types" />
                
                <!-- Start Handeling Noations -->
                <keyword attribute="Type" context="assign" String="Noations" />
                
                <!--  Start Handeling Keyword  --> 
                <keyword attribute="Keyword" context="#stay" String="Keywords" />
                <keyword attribute="Keyword" context="assign" String="Participants" />
                <keyword attribute="Keyword" context="assign" String="Modifires" />
                
                <!-- Keyword circle_short_form syntax -->
                <RegExpr attribute="Keyword" context="assign" String="\(\)" firstNonSpace="false" />
                
                <!-- Keyword diamond_short_form syntax -->
                <RegExpr attribute="Keyword" context="assign" String="\&lt;&gt;" firstNonSpace="false" />

                <!-- Start Handeling Symbols -->
                <RegExpr attribute="Symbol" context="assign" String="(?&lt;!\w)[ \.\#\-\_\&lt;\=>\[\]\(\)\{\}\?\*\+\^\\\/\\o\\x\|]+(?=\W)|(>>)|(&lt;&lt;)|(>>)|&lt;(&quot;[^=]*&quot;|&quot;[^&quot;]*&quot;|[^&quot;&quot;>])*>" firstNonSpace="false" />
                
                <!-- Start Handeling Lables -->
                <RegExpr attribute="Lable" context="assign" String=": (.)\w+.*" firstNonSpace="false" />
                <RegExpr attribute="Lable" context="assign" String=": (.)\w+ [:digit:]\w+ &gt;" firstNonSpace="false" />
                <RegExpr attribute="Lable" context="assign" String=": (.)\w+ &gt;" firstNonSpace="false" />
                <RegExpr attribute="Lable" context="assign" String=": &lt; (.)\w+" firstNonSpace="false" />
                
                <!-- Start Handeling Oprators  -->
                <AnyChar attribute="Operator" context="#stay" String="#,+,-,:,=,~" />

                <!-- Start Handeling Functions -->
                <RegExpr attribute="Function" context="assign" String="\w+[a-z-A-Z1-9]\(.*\)" firstNonSpace="false" />
                
                <!-- Start Handeling Single Line Comment -->
                <RegExpr attribute="Comment" context="assign" String="\'.*" firstNonSpace="false" />
               

                <!-- Start Handeling Multiple line String [(related by) -> context name="String"]   -->               
                <DetectChar attribute="String" context="string" char="&quot;" />
                
                <!-- Start Handeling Note -->
                <RegExpr attribute="Note" context="assign" String="(note\stop\sof)|(note\sright\sof)|(note\sbottom\sof)|(note\sleft\sof)|(note\sleft)|(^note)|(end\snote)" firstNonSpace="false" />

            </context>
            
            <!--  End Handeling Multiple line string  -->
            <context attribute="String" lineEndContext="#stay" name="string">
                <DetectChar attribute="String" context="#pop" char="&quot;" />
            </context>
            
            <!-- End Handeling Multiple line comment handeling  -->
            <context name="Comment" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces/>
                <StringDetect attribute="Comment" context="#pop" String="'/" endRegion="comment"/>
            </context>

        </contexts>
        <!--  End Contexts -->

        <itemDatas>
            <itemData name="NormalText" defStyleNum="dsNormal" />
            <itemData name="OpenCloseKeyword" defStyleNum="dsBuiltIn" />
            <itemData name="Keyword" defStyleNum="dsKeyword" />
            <itemData name="String" defStyleNum="dsString" />
            <itemData name="Symbol" defStyleNum="dsSpecialChar" />
            <itemData name="Comment" defStyleNum="dsComment" />
            <itemData name="MultipleComment" defStyleNum="dsComment" />
            <itemData name="Lable" defStyleNum="dsRegionMarker" />
            <itemData name="Operator" defStyleNum="dsOperator" />
            <itemData name="Function" defStyleNum="dsFunction" />
            <itemData name="Type" defStyleNum="dsDataType" />
            <itemData name="Note" defStyleNum="dsInformation" />
        </itemDatas>
    </highlighting>

    <!-- Start General -->
    <general>
        <!-- Comments  -->
        <comments>
            <comment name="singleLine" start="'" />
            <comment name="multiLine" start="/'" end="'/" region="CommentFolding" />
        </comments>
        <keywords casesensitive="1" />
        <folding indentationsensitive="0" />
        <emptyLines>
            <emptyLine regexpr="\s+" />
            <emptyLine regexpr="\s*#.*" />
        </emptyLines>
        <spellchecking>
            <encoding char="á" string="\'a" />
            <encoding char="à" string="\`a" />
        </spellchecking>
    </general>
    <!-- End General-->
</language>

